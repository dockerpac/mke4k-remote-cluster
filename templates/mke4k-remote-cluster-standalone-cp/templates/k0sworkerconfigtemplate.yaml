{{- $global := .Values.global | default dict }}
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: K0sWorkerConfigTemplate
metadata:
  name: {{ include "k0sworkerconfigtemplate.name" . }}
spec:
  template:
    spec:
      {{- if $global.k0sURL }}
      downloadURL: "{{ $global.k0sURL }}/k0s-{{ .Values.k0s.version }}-amd64"
      {{- end }}
      files:
        {{- if or .Values.registry.image.caSecret .Values.registry.chart.caSecret }}
        - content: |
            version = 2
            
            [plugins."io.containerd.grpc.v1.cri".registry]
              config_path = "/etc/containerd/certs.d"
          path: "/etc/k0s/containerd.d/registry-config.toml"
          permissions: "0644"
          {{- range $_, $registryData := .Values.registry }}
            {{- if $registryData.caSecret }}
        - contentFrom:
            secretRef:
              name: {{ $registryData.caSecret }}
              key: ca.crt
          permissions: "0664"
          path: /etc/containerd/certs.d/{{ (urlParse $registryData.url).host }}/ca.crt
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if or $global.registryCertSecret $global.k0sURLCertSecret }}
        {{- $certs := dict "registry.crt" $global.registryCertSecret "k0s-url.crt" $global.k0sURLCertSecret }}
        {{- range $path, $secret := $certs }}
        {{- if $secret }}
        - contentFrom:
            secretRef:
              name: {{ $secret }}
              key: ca.crt
          permissions: "0664"
          path: /usr/local/share/ca-certificates/{{ $path }}
        {{- end }}
        {{- end }}
      preStartCommands:
      - "sudo update-ca-certificates"
      {{- end }}
      useSystemHostname: true
      args:
      - --debug=true
      - --kubelet-extra-args={{ include "kubeletArgs" .Values.k0s.kubelet.extraArgs }}
      - --kubelet-root-dir={{ default "/var/lib/kubelet" .Values.k0s.kubelet.kubeletRootDir }}
      - --profile={{ default "mke-default-worker" .Values.k0s.profile.worker }}
      version: {{ .Values.k0s.version }}
